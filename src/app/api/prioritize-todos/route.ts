import { NextRequest, NextResponse } from 'next/server';
import OpenAI from 'openai';

const openai = new OpenAI({ apiKey: process.env.OPENAI_API_KEY! });

export async function POST(req: NextRequest): Promise<NextResponse> {
  const { todos } = await req.json();

  if (!Array.isArray(todos) || todos.length === 0) {
    return NextResponse.json({ error: 'Keine To-dos angegeben.' }, { status: 400 });
  }

  const prompt = `
Du erhÃ¤ltst eine Liste von Aufgaben, die aus meinem Kalender generiert wurden.

Bitte analysiere jede Aufgabe und:
1. Entferne Aufgaben, die keine aktive Vorbereitung benÃ¶tigen (z.â€¯B. regelmÃ¤ssige Meetings, Daily, Lunch and Learn und Ã¤hnliches).
2. Erstelle Aufgaben von Meeting welche eine Nachbereitung benÃ¶tigen.
3. Erstelle Aufgaben von Meetings, die eine Vorbereitung benÃ¶tigen.
4. Erstelle Aufgaben von Meetings, die eine aktive Teilnahme erfordern.
5. Erstelle Aufgaben von Meetings, die eine aktive Vorbereitung erfordern.
6. Erstelle Aufgaben von Meetings, die eine aktive Nachbereitung erfordern.
7. Priorisiere Aufgaben nach Relevanz: Vorbereitung und kritische Themen zuerst, dann Meetings, dann Unwichtiges.
8. Gib die bereinigte und sortierte Liste zurÃ¼ck â€“ max. 3 Punkte.
9. Verwende eine nummerierte Liste (1â€“3).

${todos.map((todo: string) => `- ${todo}`).join('\n')}

Bitte ordne diese Aufgaben nach PrioritÃ¤t (hoch, mittel, niedrig). 
BerÃ¼cksichtige dabei zeitliche NÃ¤he, Bedeutung und Dringlichkeit.

Gib die Antwort in folgender Form zurÃ¼ck:
1. ðŸŸ¥ Hoch â€“ ...
2. ðŸŸ¨ Mittel â€“ ...
3. ðŸŸ© Niedrig â€“ ...
`;

  const completion = await openai.chat.completions.create({
    model: 'gpt-4',
    messages: [{ role: 'user', content: prompt }],
  });

  const prioritizedText = completion.choices[0]?.message?.content?.trim();

  return NextResponse.json({ prioritized: prioritizedText });
}
